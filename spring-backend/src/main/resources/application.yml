server:
  port : 8080

spring:
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    url: ${POSTGRESQL_URL}
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}
    driver-class-name: org.postgresql.Driver
  graphql:
    graphiql:
      enabled: true
#    printer:
#      enabled: true
    cors:
      allowed-origins: "https://linkey.co.kr"
      allowed-methods: "GET,POST"
      allowed-headers: "*"
    schema:
      locations: classpath:static/graphql/
    playground:
      settings:
        request.credentials: "omit"

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
    lettuce:
      pool:
        max-active: 8    # 최대 활성 연결 수 (기본값: 8)
        max-idle: 8      # 풀에 유지할 최대 유휴 연결 수 (기본값: 8)
        min-idle: 0      # 풀에 유지할 최소 유휴 연결 수 (기본값: 0)
        max-wait: 2000ms # 연결을 기다리는 최대 시간 (기본값: -1, 무제한 대기)

logging:
  level:
    org.springframework.graphql: DEBUG
    org.hibernate.SQL: DEBUG
    #org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    root: trace


#datasource:
#  url: jdbc:postgresql://host.docker.internal:5432/mydatabase